%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Solve ax^2 + bx + c = 0 for real roots
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clc; clear all; close all;

diary quadraticTest.txt

disp('Solve ax^2 + bx + c = 0 for real roots')
a = input('Enter a: ');
b = input('Enter b: ');
c = input('Enter c: ');

[err,r1,r2,complex] = quadraticFormula(a,b,c);

if(err)
    disp('ERROR: a=0');
else
    if (complex)
        fprintf('Complex Roots are (%0.5g + i%0.5g) and (%0.5g - i%0.5g) \n', r1(1),r1(2),r2(1),r2(2));
    else
        fprintf('Real Roots are %0.5g and %0.5g \n', r1,r2);
    end
end

diary off

function [err,r1,r2,complex] = quadraticFormula(a,b,c)

complex = 0;
discriminant = b*b - 4*a*c;
eps = 1e-20;

if (discriminant < 0 && abs(discriminant) < eps)
    fprintf('|abs(D)| = %0.8e; Setting D to 0 \n',abs(discriminant))
    discriminant = 0;
end

if(abs(a) < eps)
    err = 1; r1 = NaN; r2 = NaN;
    return
end



if(b < 0)
    % multiply through by -1, so now b>=0
    a = -a; b = -b; c = -c;
end


if(discriminant < 0)
    complex = 1;
    r1_r = -(b/(2*a));
    r1_c = -(sqrt(-discriminant)/(2*a));
    r1 = [r1_r,r1_c];

    r2 = r1;

    err = 0;
    return
    
end

r1 = -(b + sqrt(discriminant)) / (2*a);
r2 = -2*c / (b + sqrt(discriminant));
err = 0;

end

